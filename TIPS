1> 解决 UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-78: ordinal not in range(128)...
# 在py文件的最开始加上:
import sys
reload(sys)
sys.setdefaultencoding('utf8')


2> ['1:a','2:b','3:c'] 转换为 {’1′: ‘a’, ’3′: ‘c’, ’2′: ‘b’}
a = {}
b = ['1:a','2:b','3:c']
map(lambda x:a.setdefault(x.split(':')[0], x.split(':')[1]), b)
print a


3> 列表去重
>>> l = [3,1,2,5,5,10,12,2,5,2]
方法1:
>>> res=[]
>>> for i in l:
...     if i not in res:
...         res.append(i)
... 
>>> print res
[3, 1, 2, 5, 10, 12]
方法2:
>>> res=[]
>>> [res.append(x) for x in l if x not in res]
[None, None, None, None, None, None]
>>> print res
[3, 1, 2, 5, 10, 12]
方法3:
>>> l = set(l)    #顺序会改变
>>> print l
set([1, 2, 3, 5, 10, 12])


4> 简单的socket通信
#!/usr/bin/python
# -*- coding: utf-8 -*-
import socket
#socket通信客户端
def client():
    mysocket=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    mysocket.connect(('127.0.0.1',8000))
    mysocket.send('hello')
    while 1:
        data=mysocket.recv(1024)
        if data:
           print data
        else:
            break
    mysocket.close()
#服务器端
def server():
    ser=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    ser.bind(('127.0.0.1',8000))
    ser.listen(5)
    while 1:
        client,addr=ser.accept()
        print 'accept %s connect'%(addr,)
        data=client.recv(1024)
        print data
        client.send('get')
        client.close()


5> 
